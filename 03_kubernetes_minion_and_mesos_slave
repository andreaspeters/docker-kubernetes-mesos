#
# Dockerfile - Google Kubernetes minion and Apache Mesos slave
#
# - Build
# docker build --rm -t k8sm:minion-slave -f 03_kubernetes_minion_and_mesos_slave .
#
# - Run
# docker run -d --name="kubernetes-minion-0" -h "kubernetes-minion-0" --privileged=true -v /dev:/dev k8sm:minion-slave
# docker run -d --name="kubernetes-minion-1" -h "kubernetes-minion-1" --privileged=true -v /dev:/dev k8sm:minion-slave
# docker run -d --name="kubernetes-minion-2" -h "kubernetes-minion-2" --privileged=true -v /dev:/dev k8sm:minion-slave
# docker run -d --name="kubernetes-minion-3" -h "kubernetes-minion-3" --privileged=true -v /dev:/dev k8sm:minion-slave
#
# - SSH
# ssh `docker inspect -f '{{ .NetworkSettings.IPAddress }}' kubernetes-minion-0`
# ssh `docker inspect -f '{{ .NetworkSettings.IPAddress }}' kubernetes-minion-1`
# ssh `docker inspect -f '{{ .NetworkSettings.IPAddress }}' kubernetes-minion-2`
# ssh `docker inspect -f '{{ .NetworkSettings.IPAddress }}' kubernetes-minion-3`
#
# Use the base images
FROM ubuntu:14.04
MAINTAINER Yongbok Kim <ruo91@yongbok.net>

# Change the repository
RUN sed -i 's/archive.ubuntu.com/kr.archive.ubuntu.com/g' /etc/apt/sources.list

# The last update and install package for docker
RUN apt-get update && apt-get install -y apt-transport-https ca-certificates lxc iptables apparmor \
 supervisor openssh-server curl nano git-core tmux build-essential

# Docker in Docker
RUN curl -sSL https://get.docker.com/ubuntu/ | sh
ADD conf/wrapdocker /usr/local/bin/wrapdocker

# Docker config
ENV DOCKER_CONF=/etc/default/docker
RUN chmod +x /usr/local/bin/wrapdocker \
 && sed -i '/^\#DOCKER_OPTS/ s:.*:DOCKER_OPTS=\"--dns 8.8.8.8 --dns 8.8.4.4 --dns-search google-public-dns-a.google.com\":' $DOCKER_CONF

# Volume mount
# Issue     : There are no more loopback devices available.
# Solution : docker run -v /dev/:/dev
VOLUME /dev
VOLUME /var/run
#VOLUME /var/lib/docker

# Variable
ENV SRC_DIR /opt
WORKDIR $SRC_DIR

# Mesos Slave
RUN apt-get install -y  add-apt-key \
 && apt-key adv --keyserver keyserver.ubuntu.com --recv E56151BF \
 && echo "deb http://repos.mesosphere.io/ubuntu trusty main" > /etc/apt/sources.list.d/mesosphere.list \
 && apt-get update && apt-get install -y mesos

# Kubernetes Mesos
ENV K8SM_HOME $SRC_DIR/kubernetes
ENV PATH $PATH:$K8SM_HOME/server/bin
ADD kubernetes-server-linux-amd64.tar.gz $SRC_DIR
RUN echo '# Kubernetes' >> /etc/profile \
 && echo "export K8SM_HOME=$K8SM_HOME" >> /etc/profile \
 && echo 'export PATH=$PATH:$K8SM_HOME/server/bin' >> /etc/profile \
 && echo '' >> /etc/profile

# Add mesos scripts
ADD conf/cluster/01_mesos.sh /bin/mesos.sh
ADD conf/cluster/03_mesos-clould.conf	$SRC_DIR/mesos-clould.conf
RUN chmod a+x /bin/mesos.sh

# Supervisor
RUN mkdir -p /var/log/supervisor
ADD conf/minion_supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# SSH
RUN mkdir /var/run/sshd
RUN sed -i 's/without-password/yes/g' /etc/ssh/sshd_config
RUN sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
RUN sed -i 's/\#AuthorizedKeysFile/AuthorizedKeysFile/g' /etc/ssh/sshd_config

# Set the root password for ssh
RUN echo 'root:k8sm' |chpasswd

# Port
EXPOSE 22

# Daemon
CMD ["/usr/bin/supervisord"]
